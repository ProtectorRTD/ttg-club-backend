name: Update Server

on:
  workflow_call:

permissions:
  deployments: write
  contents: read
  pages: write
  actions: write
  id-token: write

concurrency:
  group: restart-server-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  prod-ssh:
    name: Update Dev SSH Server
    if: ${{ github.ref_name == 'dev' }}
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker stop ttg-app-dev && docker rm ttg-app-dev
            docker pull magistrus/dnd5club:latest
            docker run \
              --network ttg-network-dev \
              --name ttg-app-dev \
              -p 9090:8080 \
              -d \
              -e spring.profiles.active=dev \
              -e frontend.application.sha=$(echo -n $(uuidgen) | shasum -a 256 | tr -d "\n *-") \
              -e dbhost=ttg-db-dev \
              -e dbport=3306 \
              -e dbuser=${{ secrets.DB_USER }} \
              -e dbpassword=${{ secrets.DB_PASSWORD }} \
              -e emailpassword=${{ secrets.EMAIL_PASSWORD }} \
              -e dbname=dnd5 magistrus/dnd5club
            docker rmi $(docker images --filter "dangling=true" -q --no-trunc) &

  dev-ssh:
    name: Update Prod SSH Server
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker stop ttg-app-prod && docker rm ttg-app-prod
            docker pull magistrus/dnd5club:latest
            docker run \
              --network ttg-network-prod \
              --name ttg-app-prod \
              -p 9393:8080 \
              -d \
              -e spring.profiles.active=prod \
              -e frontend.application.sha=$(echo -n $(uuidgen) | shasum -a 256 | tr -d "\n *-") \
              -e dbhost=ttg-db-prod \
              -e dbport=23306 \
              -e dbuser=${{ secrets.DB_USER }} \
              -e dbpassword=${{ secrets.DB_PASSWORD }} \
              -e emailpassword=${{ secrets.EMAIL_PASSWORD }} \
              -e dbname=dnd5 magistrus/dnd5club
            docker rmi $(docker images --filter "dangling=true" -q --no-trunc) &
